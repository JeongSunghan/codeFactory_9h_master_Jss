/**
 * try...catch
 *  -> 에러를 잡는데 사용!
 * 
 *  1) 발생시킬 때 -> 던진다고 한다. (thorw)
 *  2) 명시적으로 인지할 때 -> 잡는다고 한다. (catch)
 */

function runner() {
    console.log('Hello');

    throw new Error('큰 문제가 생겼습니다.');  //new 키워드 : 새로운 객체를 생성하다 -> new 키워드는 추후 다시 배울 예정
    //error 라는 값에는 파라미터를 넣을 수 있다. -> js에서 제공해주는 값
    //hello 이후 에러가 발생 -> 어디서 에러가 발생했는지 정확하게 잡아낸다. 

    console.log('Code Factory');    
    //코드팩토리는 출력이 되지않는다. -> 왜? : 에러를 던지면, 에러가 던지는 순간 함수는 정지한다.
    //에러는 나쁜 건 맞지만, 우리에게 굉장히 좋은 정보를 전달하기에 부담을 갖지 말것 -> 에러가 발생해도 패닉에 빠지지말고 당황하지 말 것
    //모든 답은 에러메세지 정의되어 있다. -> 에러메세지를 보고 적절한 에러를 잡는 방법이 필요 : 이때 사용하는게 try-catch 이다.
};
runner();   //출력이 정상적으로 된다. -> 여기서 에러를 던질 수 있음